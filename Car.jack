class Car {
	
    field int x, y, nativ; // screen location of the car's top-left corner

	/** 
	* Constructs a new car with a given location and size. 
	* Get current lane
	*/
	constructor Car new(int Ax, int Ay, int Anativ) {

	//assigment
	let x = Ax;
	let y = Ay + 9;
	let nativ = Anativ;
	
	return this;
	}
    
	/** Accessors. */
	method int getX() { return x;}
	method int getNativ() { return nativ;}
	method int getY() { return y;}

	/** 
	* Disposes this car. 
	*/
	method void dispose() {
		do erase();
		
		//Uses an OS routine to recycle this object.
		do Memory.deAlloc(this);
		return;
	}

   /** 
   * Draws the car on the screen. 
   */
	method void draw() {
		var int location, memAddress;
		let location = (32*y)+(x/16);
		let memAddress = 16384+((32*y)+(x/16)) + 3 + (512);
          
		do Memory.poke(memAddress+0, -25);
		do Memory.poke(memAddress+32, -25);
		do Memory.poke(memAddress+64, -25);
		do Memory.poke(memAddress+96, -25);
		do Memory.poke(memAddress+128, -25);
		do Memory.poke(memAddress+160, -3097);
		do Memory.poke(memAddress+192, -7681);
		do Memory.poke(memAddress+224, 25086);
		do Memory.poke(memAddress+256, 29694);
		do Memory.poke(memAddress+288, 32767);
		do Memory.poke(memAddress+320, 32767);
		do Memory.poke(memAddress+352, 16383);
		do Memory.poke(memAddress+384, 8191);
		do Memory.poke(memAddress+416, 511);
		do Memory.poke(memAddress+448, 511);
		do Memory.poke(memAddress+480, 511);
		
		let memAddress = 16384+(32*y)+(x/16) + 3;
		do Memory.poke(memAddress+0, 511);
		do Memory.poke(memAddress+32, 511);
		do Memory.poke(memAddress+64, 511);
		do Memory.poke(memAddress+96, 8191);
		do Memory.poke(memAddress+128, 16383);
		do Memory.poke(memAddress+160, 32767);
		do Memory.poke(memAddress+192, 32767);
		do Memory.poke(memAddress+224, 29694);
		do Memory.poke(memAddress+256, 25086);
		do Memory.poke(memAddress+288, -7681);
		do Memory.poke(memAddress+320, -3097);
		do Memory.poke(memAddress+352, -25);
		do Memory.poke(memAddress+384, -25);
		do Memory.poke(memAddress+416, -25);
		do Memory.poke(memAddress+448, -25);
		do Memory.poke(memAddress+480, -25);
		
		let memAddress = 16384+((32*y)+(x/16)) + 2 + (512);
		do Memory.poke(memAddress+0, -1);
		do Memory.poke(memAddress+32, -1);
		do Memory.poke(memAddress+64, -1);
		do Memory.poke(memAddress+96, -1);
		do Memory.poke(memAddress+128, -1);
		do Memory.poke(memAddress+160, -1);
		do Memory.poke(memAddress+192, -1);
		do Memory.poke(memAddress+224, 0);
		do Memory.poke(memAddress+256, 0);
		do Memory.poke(memAddress+288, -1);
		do Memory.poke(memAddress+320, -1);
		do Memory.poke(memAddress+352, -1);
		do Memory.poke(memAddress+384, -1);
		do Memory.poke(memAddress+416, -4096);
		do Memory.poke(memAddress+448, -4096);
		do Memory.poke(memAddress+480, -4096);
		
		let memAddress = 16384+((32*y)+(x/16)) + 2;
		do Memory.poke(memAddress+0, -4096);
		do Memory.poke(memAddress+32, -4096);
		do Memory.poke(memAddress+64, -4096);
		do Memory.poke(memAddress+96, -1);
		do Memory.poke(memAddress+128, -1);
		do Memory.poke(memAddress+160, -1);
		do Memory.poke(memAddress+192, -1);
		do Memory.poke(memAddress+224, 0);
		do Memory.poke(memAddress+256, 0);
		do Memory.poke(memAddress+288, -1);
		do Memory.poke(memAddress+320, -1);
		do Memory.poke(memAddress+352, -1);
		do Memory.poke(memAddress+384, -1);
		do Memory.poke(memAddress+416, -1);
		do Memory.poke(memAddress+448, -1);
		do Memory.poke(memAddress+480, -1);
		
		let memAddress = 16384+((32*y)+(x/16)) + 1 + (512);
		do Memory.poke(memAddress+0, -7170);
		do Memory.poke(memAddress+32, -7170);
		do Memory.poke(memAddress+64, -7170);
		do Memory.poke(memAddress+96, -7170);
		do Memory.poke(memAddress+128, -7170);
		do Memory.poke(memAddress+160, -7170);
		do Memory.poke(memAddress+192, -4);
		do Memory.poke(memAddress+224, -4);
		do Memory.poke(memAddress+256, -4);
		do Memory.poke(memAddress+288, -1);
		do Memory.poke(memAddress+320, -1);
		do Memory.poke(memAddress+352, -1);
		do Memory.poke(memAddress+384, -1);
		do Memory.poke(memAddress+416, 8190);
		do Memory.poke(memAddress+448, 8190);
		do Memory.poke(memAddress+480, 8190);
		
		let memAddress = 16384+((32*y)+(x/16)) + 1;
		do Memory.poke(memAddress+0, 8190);
		do Memory.poke(memAddress+32, 8190);
		do Memory.poke(memAddress+64, 8190);
		do Memory.poke(memAddress+96, -1);
		do Memory.poke(memAddress+128, -1);
		do Memory.poke(memAddress+160, -1);
		do Memory.poke(memAddress+192, -1);
		do Memory.poke(memAddress+224, -4);
		do Memory.poke(memAddress+256, -4);
		do Memory.poke(memAddress+288, -4);
		do Memory.poke(memAddress+320, -7170);
		do Memory.poke(memAddress+352, -7170);
		do Memory.poke(memAddress+384, -7170);
		do Memory.poke(memAddress+416, -7170);
		do Memory.poke(memAddress+448, -7170);
		do Memory.poke(memAddress+480, -7170);
		
		let memAddress = 16384 + ((32*y)+(x/16)) + (512);
		do Memory.poke(memAddress+0, 252);
		do Memory.poke(memAddress+32, 252);
		do Memory.poke(memAddress+64, 252);
		do Memory.poke(memAddress+96, 252);
		do Memory.poke(memAddress+128, 508);
		do Memory.poke(memAddress+160, 1016);
		do Memory.poke(memAddress+192, 2032);
		do Memory.poke(memAddress+224, 4064);
		do Memory.poke(memAddress+256, 8128);
		do Memory.poke(memAddress+288, -128);
		do Memory.poke(memAddress+320, -256);
		do Memory.poke(memAddress+352, -512);
		do Memory.poke(memAddress+384, -4096);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		
		let memAddress = 16384+((32*y)+(x/16));
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 0);
		do Memory.poke(memAddress+96, -4096);
		do Memory.poke(memAddress+128, -512);
		do Memory.poke(memAddress+160, -256);
		do Memory.poke(memAddress+192, -128);
		do Memory.poke(memAddress+224, 8128);
		do Memory.poke(memAddress+256, 4064);
		do Memory.poke(memAddress+288, 2032);
		do Memory.poke(memAddress+320, 1016);
		do Memory.poke(memAddress+352, 508);
		do Memory.poke(memAddress+384, 252);
		do Memory.poke(memAddress+416, 252);
		do Memory.poke(memAddress+448, 252);
		do Memory.poke(memAddress+480, 252);
		
     	return;
	}

   /** 
   * Erases the car from the screen. 
   */
	method void erase() {
		var int location, memAddress;
		let location = (32*y)+(x/16);
		let memAddress = 16384+((32*y)+(x/16)) + 3 + (512);
          
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 0);
		do Memory.poke(memAddress+96, 0);
		do Memory.poke(memAddress+128, 0);
		do Memory.poke(memAddress+160, 0);
		do Memory.poke(memAddress+192, 0);
		do Memory.poke(memAddress+224, 0);
		do Memory.poke(memAddress+256, 0);
		do Memory.poke(memAddress+288, 0);
		do Memory.poke(memAddress+320, 0);
		do Memory.poke(memAddress+352, 0);
		do Memory.poke(memAddress+384, 0);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);

		let memAddress = 16384+(32*y)+(x/16) + 3;
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 0);
		do Memory.poke(memAddress+96, 0);
		do Memory.poke(memAddress+128, 0);
		do Memory.poke(memAddress+160, 0);
		do Memory.poke(memAddress+192, 0);
		do Memory.poke(memAddress+224, 0);
		do Memory.poke(memAddress+256, 0);
		do Memory.poke(memAddress+288, 0);
		do Memory.poke(memAddress+320, 0);
		do Memory.poke(memAddress+352, 0);
		do Memory.poke(memAddress+384, 0);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		
		let memAddress = 16384+((32*y)+(x/16)) + 2 + (512);
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 0);
		do Memory.poke(memAddress+96, 0);
		do Memory.poke(memAddress+128, 0);
		do Memory.poke(memAddress+160, 0);
		do Memory.poke(memAddress+192, 0);
		do Memory.poke(memAddress+224, 0);
		do Memory.poke(memAddress+256, 0);
		do Memory.poke(memAddress+288, 0);
		do Memory.poke(memAddress+320, 0);
		do Memory.poke(memAddress+352, 0);
		do Memory.poke(memAddress+384, 0);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		
		let memAddress = 16384+((32*y)+(x/16)) + 2;
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 0);
		do Memory.poke(memAddress+96, 0);
		do Memory.poke(memAddress+128, 0);
		do Memory.poke(memAddress+160, 0);
		do Memory.poke(memAddress+192, 0);
		do Memory.poke(memAddress+224, 0);
		do Memory.poke(memAddress+256, 0);
		do Memory.poke(memAddress+288, 0);
		do Memory.poke(memAddress+320, 0);
		do Memory.poke(memAddress+352, 0);
		do Memory.poke(memAddress+384, 0);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		
		let memAddress = 16384+((32*y)+(x/16)) + 1 + (512);
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 0);
		do Memory.poke(memAddress+96, 0);
		do Memory.poke(memAddress+128, 0);
		do Memory.poke(memAddress+160, 0);
		do Memory.poke(memAddress+192, 0);
		do Memory.poke(memAddress+224, 0);
		do Memory.poke(memAddress+256, 0);
		do Memory.poke(memAddress+288, 0);
		do Memory.poke(memAddress+320, 0);
		do Memory.poke(memAddress+352, 0);
		do Memory.poke(memAddress+384, 0);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		
		let memAddress = 16384+((32*y)+(x/16)) + 1;
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 0);
		do Memory.poke(memAddress+96, 0);
		do Memory.poke(memAddress+128, 0);
		do Memory.poke(memAddress+160, 0);
		do Memory.poke(memAddress+192, 0);
		do Memory.poke(memAddress+224, 0);
		do Memory.poke(memAddress+256, 0);
		do Memory.poke(memAddress+288, 0);
		do Memory.poke(memAddress+320, 0);
		do Memory.poke(memAddress+352, 0);
		do Memory.poke(memAddress+384, 0);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		
		let memAddress = 16384 + ((32*y)+(x/16)) + (512);
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 0);
		do Memory.poke(memAddress+96, 0);
		do Memory.poke(memAddress+128, 0);
		do Memory.poke(memAddress+160, 0);
		do Memory.poke(memAddress+192, 0);
		do Memory.poke(memAddress+224, 0);
		do Memory.poke(memAddress+256, 0);
		do Memory.poke(memAddress+288, 0);
		do Memory.poke(memAddress+320, 0);
		do Memory.poke(memAddress+352, 0);
		do Memory.poke(memAddress+384, 0);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
		
		let memAddress = 16384+((32*y)+(x/16));
		do Memory.poke(memAddress+0, 0);
		do Memory.poke(memAddress+32, 0);
		do Memory.poke(memAddress+64, 0);
		do Memory.poke(memAddress+96, 0);
		do Memory.poke(memAddress+128, 0);
		do Memory.poke(memAddress+160, 0);
		do Memory.poke(memAddress+192, 0);
		do Memory.poke(memAddress+224, 0);
		do Memory.poke(memAddress+256, 0);
		do Memory.poke(memAddress+288, 0);
		do Memory.poke(memAddress+320, 0);
		do Memory.poke(memAddress+352, 0);
		do Memory.poke(memAddress+384, 0);
		do Memory.poke(memAddress+416, 0);
		do Memory.poke(memAddress+448, 0);
		do Memory.poke(memAddress+480, 0);
	
     	return;
	}

	/**
	* Moves the car left by 1 pixels, only if not exceed.
	* return success/fail.
	*/
	method boolean moveLeft() {
		if (x > 1) {
			do erase();
			let x = x - 1;
			do draw();
			return false;
		}else{
			return true;
		}
	}
}