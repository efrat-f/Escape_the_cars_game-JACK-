function BallGame.new 1
push constant 11
call Memory.alloc 1
pop pointer 0
push argument 3
pop this 1
push argument 2
pop this 2
push argument 0
pop this 3
push argument 1
pop this 4
push argument 5
pop this 6
push argument 4
pop this 7
push constant 0
pop this 5
push this 1
push constant 3
call Math.divide 2
push constant 15
sub
pop local 0
push constant 2
push local 0
push constant 2
call Math.divide 2
push this 1
push constant 3
call Math.divide 2
push local 0
add
push constant 4
call Math.divide 2
push argument 0
add
push this 1
push constant 2
call Math.divide 2
push argument 1
add
call Ball.new 4
pop this 0
push this 0
call Ball.draw 1
pop temp 0
push constant 0
not
call Screen.setColor 1
pop temp 0
push this 3
push this 4
push this 1
push constant 3
call Math.divide 2
add
push this 3
push this 2
add
push this 4
push this 1
push constant 3
call Math.divide 2
add
call Screen.drawLine 4
pop temp 0
push this 3
push this 4
push this 1
push constant 3
call Math.divide 2
push constant 2
call Math.multiply 2
add
push this 3
push this 2
add
push this 4
push this 1
push constant 3
call Math.divide 2
push constant 2
call Math.multiply 2
add
call Screen.drawLine 4
pop temp 0
push constant 0
push constant 0
call ListCar.new 2
pop this 8
push this 8
pop this 9
push pointer 0
return
function BallGame.dispose 2
push argument 0
pop pointer 0
push this 8
pop local 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
pop local 1
push local 0
call ListCar.getNext 1
pop local 0
push local 1
call ListCar.dispose 1
pop temp 0
goto WHILE_EXP0
label WHILE_END0
push this 0
call Ball.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function BallGame.moveBall 0
push argument 0
pop pointer 0
push argument 1
push constant 131
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 0
push this 1
push constant 3
call Math.divide 2
call Ball.moveUp 2
pop temp 0
label IF_FALSE0
push argument 1
push constant 133
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push this 0
push this 1
push constant 3
call Math.divide 2
call Ball.moveDown 2
pop temp 0
label IF_FALSE1
push constant 0
return
function BallGame.moveCars 5
push argument 0
pop pointer 0
push this 8
call ListCar.getNext 1
push constant 0
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push this 8
call ListCar.getNext 1
pop local 0
push this 8
pop local 1
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
call ListCar.getCar 1
pop local 3
push local 3
call Car.moveLeft 1
pop local 4
push local 3
call Car.getX 1
push this 0
call Ball.getX 1
push this 0
call Ball.getSize 1
add
lt
push local 3
call Car.getNativ 1
and
push this 0
call Ball.getNativ 1
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
push local 4
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push local 0
call ListCar.getNext 1
pop local 2
push local 1
push local 2
call ListCar.setNext 2
pop temp 0
push local 0
call ListCar.dispose 1
pop temp 0
push local 2
pop local 0
push this 5
push constant 10
add
pop this 5
push this 7
push this 6
push constant 7
add
call Output.moveCursor 2
pop temp 0
push this 5
call Output.printInt 1
pop temp 0
goto IF_END2
label IF_FALSE2
push local 0
pop local 1
push local 0
call ListCar.getNext 1
pop local 0
label IF_END2
goto WHILE_EXP0
label WHILE_END0
push local 1
pop this 9
goto IF_END0
label IF_FALSE0
push this 8
pop this 9
label IF_END0
push constant 0
return
function BallGame.addCar 3
push argument 0
pop pointer 0
push this 10
push constant 2
call Random.randRange 2
pop local 2
push this 3
push this 2
add
push constant 70
sub
push this 4
push this 1
push constant 3
call Math.divide 2
push local 2
call Math.multiply 2
add
push constant 5
add
push local 2
push constant 1
add
call Car.new 3
pop local 0
push local 0
call Car.draw 1
pop temp 0
push local 0
push constant 0
call ListCar.new 2
pop local 1
push this 9
push local 1
call ListCar.setNext 2
pop temp 0
push this 9
call ListCar.getNext 1
pop this 9
push constant 0
return
function BallGame.run 6
push argument 0
pop pointer 0
push constant 0
pop local 2
push constant 0
pop local 3
push constant 0
pop local 4
push argument 1
pop local 5
push constant 0
pop local 1
push this 7
push this 6
call Output.moveCursor 2
pop temp 0
push constant 11
call String.new 1
push constant 115
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 58
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push this 7
push this 6
push constant 7
add
call Output.moveCursor 2
pop temp 0
push this 5
call Output.printInt 1
pop temp 0
label WHILE_EXP0
push local 1
not
not
if-goto WHILE_END0
label WHILE_EXP1
push local 0
push constant 0
eq
push local 1
not
and
not
if-goto WHILE_END1
push local 2
push constant 1
add
pop local 2
push pointer 0
call BallGame.moveCars 1
pop local 1
call Keyboard.keyPressed 0
pop local 0
push local 5
call Sys.wait 1
pop temp 0
push local 2
push constant 100
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 2
push local 3
push constant 1
add
pop local 3
label IF_FALSE0
push local 3
push local 5
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 4
push argument 2
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
not
return
label IF_FALSE2
push local 4
push constant 1
add
pop local 4
push constant 0
pop local 3
push pointer 0
call BallGame.addCar 1
pop temp 0
label IF_FALSE1
goto WHILE_EXP1
label WHILE_END1
push pointer 0
push local 0
call BallGame.moveBall 2
pop temp 0
label WHILE_EXP2
push local 0
push constant 0
eq
not
push local 1
not
and
not
if-goto WHILE_END2
call Keyboard.keyPressed 0
pop local 0
push pointer 0
call BallGame.moveCars 1
pop local 1
push local 5
call Sys.wait 1
pop temp 0
push local 2
push constant 100
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 0
pop local 2
push local 3
push constant 1
add
pop local 3
label IF_FALSE3
push local 3
push local 5
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push local 4
push argument 2
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 0
not
return
label IF_FALSE5
push local 4
push constant 1
add
pop local 4
push constant 0
pop local 3
push pointer 0
call BallGame.addCar 1
pop temp 0
label IF_FALSE4
goto WHILE_EXP2
label WHILE_END2
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
